// scripts_admin.js (개선된 관리자용)
document.addEventListener('DOMContentLoaded', async () => {
  const dateInput = document.getElementById('date');
  const roomSelect = document.getElementById('room');
  const scheduleTable = document.getElementById('scheduleTable');
  const scheduleBody = document.getElementById('scheduleBody');
  const detailSection = document.getElementById('detailSection');
  const inputSection = document.getElementById('inputSection');
  const addBtn = document.getElementById('addBtn');
  const repeatToggle = document.getElementById('repeatToggle');
  const repeatWeeks = document.getElementById('repeatWeeks');

  const startSelect = document.getElementById('start');
  const endSelect = document.getElementById('end');
  const titleInput = document.getElementById('title');
  const byInput = document.getElementById('by');
  const submitBtn = document.getElementById('submitBtn');
  const resultDiv = document.getElementById('result');

  let slots = [];
  let currentDate = new Date();

  dateInput.valueAsDate = currentDate;

  // 강의실 불러오기
  try {
    const roomRes = await fetch('https://kmed-reservation.vercel.app/api/reservations?mode=rooms');
    const roomData = await roomRes.json();
    if (!roomData.rooms || !Array.isArray(roomData.rooms)) throw new Error('rooms 구조 오류');
    roomData.rooms.forEach((roomName, idx) => {
      const opt = document.createElement('option');
      opt.value = roomName;
      opt.textContent = roomName;
      if (idx === 0) opt.selected = true;
      roomSelect.appendChild(opt);
    });
  } catch (e) {
    alert('강의실 목록을 불러오지 못했습니다.');
    console.error(e);
  }

  // 시간 슬롯 불러오기
  try {
    const slotRes = await fetch('https://kmed-reservation.vercel.app/api/reservations?mode=slots');
    const slotData = await slotRes.json();
    slots = slotData.slots || [];
  } catch (e) {
    alert('시간 구간을 불러오지 못했습니다.');
    console.error(e);
  }

  // 주간 일정 불러오기
  async function loadWeeklySchedule(baseDate, room) {
    const mon = new Date(baseDate);
    mon.setDate(mon.getDate() - mon.getDay() + 1);

    const dates = Array.from({ length: 6 }, (_, i) => {
      const d = new Date(mon);
      d.setDate(d.getDate() + i);
      return d;
    });

    scheduleBody.innerHTML = '';
    for (let i = 0; i < slots.length; i++) {
      const tr = document.createElement('tr');
      const timeCell = document.createElement('td');
      timeCell.textContent = `${slots[i][0]} - ${slots[i][1]}`;
      tr.appendChild(timeCell);

      for (let j = 0; j < 6; j++) {
        const td = document.createElement('td');
        td.dataset.date = dates[j].toISOString().slice(0, 10);
        td.dataset.slotIndex = i;
        td.className = 'slotCell';
        td.addEventListener('click', () => openDetail(td.dataset.date, slots[i][0], slots[i][1]));
        tr.appendChild(td);
      }
      scheduleBody.appendChild(tr);
    }

    for (let j = 0; j < 6; j++) {
      const dateStr = dates[j].toISOString().slice(0, 10);
      try {
        const res = await fetch(`https://kmed-reservation.vercel.app/api/reservations?mode=schedule&date=${dateStr}&room=${room}`);
        const data = await res.json();
        if (Array.isArray(data.reservations)) {
          data.reservations.forEach(r => {
            const startIdx = slots.findIndex(s => s[0] === r[3]);
            const endIdx = slots.findIndex(s => s[1] === r[4]);
            for (let k = startIdx; k <= endIdx; k++) {
              const cell = document.querySelector(`td[data-date='${dateStr}'][data-slot-index='${k}']`);
              if (cell) {
                cell.textContent = '●';
                cell.classList.add('reserved');
              }
            }
          });
        }
      } catch (e) {
        console.error('주간 일정 불러오기 실패', e);
      }
    }
  }

  async function openDetail(date, start, end) {
    detailSection.style.display = 'block';
    inputSection.style.display = 'none';
    detailSection.querySelector('#detailDate').textContent = date;
    detailSection.querySelector('#detailTime').textContent = `${start} - ${end}`;
    detailSection.dataset.date = date;
    detailSection.dataset.start = start;
    detailSection.dataset.end = end;
  }

  addBtn.addEventListener('click', () => {
    inputSection.style.display = 'block';
    startSelect.innerHTML = '';
    endSelect.innerHTML = '';
    slots.forEach(slot => {
      const opt1 = document.createElement('option');
      opt1.value = slot[0];
      opt1.textContent = slot[0];
      startSelect.appendChild(opt1);
      const opt2 = document.createElement('option');
      opt2.value = slot[1];
      opt2.textContent = slot[1];
      endSelect.appendChild(opt2);
    });
  });

  submitBtn.addEventListener('click', async () => {
    const date = detailSection.dataset.date;
    const room = roomSelect.value;
    const start = startSelect.value;
    const end = endSelect.value;
    const title = titleInput.value;
    const by = byInput.value;
    const repeat = repeatToggle.checked;
    const repeatCount = parseInt(repeatWeeks.value || '0');

    if (!date || !room || !start || !end || !title || !by) {
      resultDiv.textContent = '모든 항목을 입력하세요.';
      return;
    }

    for (let i = 0; i <= (repeat ? repeatCount : 0); i++) {
      const d = new Date(date);
      d.setDate(d.getDate() + i * 7);
      const dateStr = d.toISOString().slice(0, 10);

      try {
        const res = await fetch('https://kmed-reservation.vercel.app/api/reservations', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ date: dateStr, room, start, end, title, by })
        });
        const data = await res.json();
        if (!data.success) throw new Error(data.error);
      } catch (err) {
        resultDiv.textContent = `오류: ${err.message}`;
        return;
      }
    }

    resultDiv.textContent = '예약이 성공적으로 등록되었습니다.';
    inputSection.style.display = 'none';
    loadWeeklySchedule(currentDate, roomSelect.value);
  });

  roomSelect.addEventListener('change', () => {
    currentDate = new Date();
    loadWeeklySchedule(currentDate, roomSelect.value);
  });

  loadWeeklySchedule(currentDate, roomSelect.value);
});
